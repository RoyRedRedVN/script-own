local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

WindUI:AddTheme({
    Name = "POWER",
    Accent = Color3.fromHex("#FF6B00"),
    Dialog = Color3.fromHex("#1a1a1a"),
    Outline = Color3.fromHex("#FF8C00"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#CC5500"),
    Background = Color3.fromHex("#0d0d0d"),
    Button = Color3.fromHex("#FF6B00"),
    Icon = Color3.fromHex("#FFA500")
})

WindUI:SetTheme("POWER")

local Window = WindUI:CreateWindow({
    Title = "Lowet Hub",
    Icon = "door-open",
    Author = "by RedMod",
})

-- Tạo function thông báo đẹp thay vì dùng print thông thường
local function Notify(title, content, icon)
    WindUI:Notify({
        Title = title,
        Content = content,
        Duration = 3,
        Icon = icon or "info",
    })
end

-- Các biến toàn cục để lưu trữ cài đặt
local SelectedSeeds = {}
local SelectedGears = {}
local SelectedSellPlants = {}
local SelectedRarities = {"Secret", "Limited"}
local AutoBuySelectSeed = false
local AutoBuyAllSeeds = false
local AutoBuySelectGear = false
local AutoBuyAllGear = false
local AutoFarmEnabled = false

-- Lấy các service cần thiết từ Roblox
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- ===================== TAB HOME =====================
local SectionMain = Window:Section({
    Title = "Main",
    Icon = "house",
    Opened = true,
})

local TabHome = SectionMain:Tab({
    Title = "Home",
    Icon = "house"
})

TabHome:Paragraph({
    Title = "Welcome to Lowet Hub",
    Desc = "Join our Discord: https://discord.gg/VyQfTtDJnY",
    Locked = false,
    Buttons = {
        {
            Icon = "copy",
            Title = "Copy Link",
            Callback = function()
                setclipboard("https://discord.gg/VyQfTtDJnY")
                Notify("Success", "Discord link copied!", "check")
            end
        }
    }
})

-- ===================== TAB AUTO FARM =====================
local SectionGame = Window:Section({
    Title = "Game",
    Icon = "gamepad-2",
    Opened = true,
})

local TabAutoFarm = SectionGame:Tab({
    Title = "Auto Farm",
    Icon = "zap"
})

TabAutoFarm:Paragraph({
    Title = "Auto Farm Brainrots",
    Desc = "Farm brainrots với Frost Grenade hoặc Bat",
    Locked = false
})

TabAutoFarm:Dropdown({
    Title = "Select Rarities to Farm",
    Values = {"Rare", "Epic", "Legendary", "Mythic", "Godly", "Secret", "Limited"},
    Value = {"Secret", "Limited"},
    Multi = true,
    AllowNone = true,
    Callback = function(selected)
        SelectedRarities = selected
        if #selected > 0 then
            Notify("Rarities", table.concat(selected, ", "), "target")
        end
    end
})

TabAutoFarm:Toggle({
    Title = "Enable Auto Farm",
    Description = "Bật/tắt auto farm brainrots",
    Default = false,
    Callback = function(value)
        AutoFarmEnabled = value
        Notify("Auto Farm", value and "Enabled" or "Disabled", value and "zap" or "x")
    end
})

-- ===================== TAB SEEDS =====================
local TabSeeds = SectionGame:Tab({
    Title = "Seeds",
    Icon = "sprout"
})

TabSeeds:Dropdown({
    Title = "Select Seeds",
    Values = {"Cactus", "Strawberry", "Pumpkin", "Dragon Fruit", "Eggplant", "Watermelon", "Cocotank", "Grape", "Carnivorous Plant", "Mr carrot", "Shroombino", "Tomatrio", "Mango"},
    Value = {},
    Multi = true,
    Callback = function(selected)
        SelectedSeeds = selected
    end
})

TabSeeds:Toggle({
    Title = "Auto Buy Selected",
    Default = false,
    Callback = function(value)
        AutoBuySelectSeed = value
        Notify("Seeds", value and "Auto buy ON" or "Auto buy OFF", "shopping-cart")
    end
})

TabSeeds:Toggle({
    Title = "Auto Buy All",
    Default = false,
    Callback = function(value)
        AutoBuyAllSeeds = value
        Notify("Seeds", value and "Buy all ON" or "Buy all OFF", "shopping-bag")
    end
})

-- ===================== TAB GEAR =====================
local TabGear = SectionGame:Tab({
    Title = "Gear",
    Icon = "wrench"
})

TabGear:Dropdown({
    Title = "Select Gears",
    Values = {"Frost Grenade", "Frost Blower", "Banana Gun", "Carrot Launcher", "Water Bucket"},
    Value = {},
    Multi = true,
    Callback = function(selected)
        SelectedGears = selected
    end
})

TabGear:Toggle({
    Title = "Auto Buy Selected",
    Default = false,
    Callback = function(value)
        AutoBuySelectGear = value
        Notify("Gears", value and "Auto buy ON" or "Auto buy OFF", "tool")
    end
})

TabGear:Toggle({
    Title = "Auto Buy All",
    Default = false,
    Callback = function(value)
        AutoBuyAllGear = value
        Notify("Gears", value and "Buy all ON" or "Buy all OFF", "package")
    end
})

-- ===================== TAB SELL =====================
local TabSell = SectionGame:Tab({
    Title = "Sell",
    Icon = "dollar-sign"
})

local rarities = {"Common", "Epic", "Legendary", "Godly", "Mythic", "Secret", "Limited"}
local sellButtons = {}

for _, rarity in ipairs(rarities) do
    table.insert(sellButtons, {
        Icon = "trash-2",
        Title = "Sell " .. rarity,
        Callback = function()
            pcall(function()
                ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(rarity)
                Notify("Sold", "All " .. rarity .. " items sold!", "dollar-sign")
            end)
        end
    })
end

TabSell:Paragraph({
    Title = "Quick Sell",
    Desc = "Bán items theo rarity",
    Buttons = sellButtons
})

TabSell:Paragraph({
    Title = "Sell All Trash",
    Desc = "Bán tất cả items rác",
    Buttons = {
        {
            Icon = "trash",
            Title = "Sell All",
            Callback = function()
                local count = 0
                for _, rarity in ipairs(rarities) do
                    pcall(function()
                        ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(rarity)
                        count = count + 1
                    end)
                    task.wait(0.1)
                end
                Notify("Bulk Sell", "Sold " .. count .. " types!", "trash-2")
            end
        }
    }
})

TabSell:Dropdown({
    Title = "Select Plants to Sell",
    Values = {"Cactus", "Strawberry", "Pumpkin", "Dragon Fruit", "Eggplant", "Watermelon", "Cocotank", "Grape", "Carnivorous Plant", "Mr carrot", "Shroombino", "Tomatrio", "Mango"},
    Value = {},
    Multi = true,
    Callback = function(selected)
        SelectedSellPlants = selected
    end
})

TabSell:Paragraph({
    Title = "Sell Plants",
    Buttons = {
        {
            Icon = "hand",
            Title = "Sell Selected",
            Callback = function()
                if #SelectedSellPlants == 0 then
                    Notify("Warning", "No plants selected!", "alert-triangle")
                    return
                end
                
                local sold = 0
                for _, plant in ipairs(SelectedSellPlants) do
                    pcall(function()
                        local char = player.Character
                        local humanoid = char and char:FindFirstChildOfClass("Humanoid")
                        if humanoid then
                            local item = player.Backpack:FindFirstChild(plant) or char:FindFirstChild(plant)
                            if item then
                                humanoid:EquipTool(item)
                                task.wait(0.2)
                                ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ItemSell"):FireServer()
                                sold = sold + 1
                                task.wait(0.2)
                            end
                        end
                    end)
                end
                Notify("Plants Sold", sold .. "/" .. #SelectedSellPlants .. " sold", "check-circle")
            end
        }
    }
})

-- ===================== TAB BRAINROT =====================
local TabBrainrot = SectionGame:Tab({
    Title = "Brainrot",
    Icon = "skull"
})

TabBrainrot:Paragraph({
    Title = "Equip Best",
    Desc = "Trang bị brainrots tốt nhất",
    Buttons = {
        {
            Icon = "zap",
            Title = "Equip Best",
            Callback = function()
                pcall(function()
                    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("EquipBestBrainrots"):FireServer()
                    Notify("Success", "Best brainrots equipped!", "crown")
                end)
            end
        }
    }
})

-- ===================== AUTO BUY LOGIC =====================
task.spawn(function()
    while task.wait(0.5) do
        if AutoBuySelectSeed and #SelectedSeeds > 0 then
            for _, seed in ipairs(SelectedSeeds) do
                pcall(function()
                    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyItem"):FireServer(seed .. " Seed", true)
                end)
                task.wait(0.1)
            end
        end
        
        if AutoBuyAllSeeds then
            for _, seed in ipairs({"Cactus", "Strawberry", "Pumpkin", "Dragon Fruit", "Eggplant", "Watermelon", "Cocotank", "Grape", "Carnivorous Plant", "Mr carrot", "Shroombino", "Tomatrio", "Mango"}) do
                pcall(function()
                    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyItem"):FireServer(seed .. " Seed", true)
                end)
                task.wait(0.1)
            end
        end
        
        if AutoBuySelectGear and #SelectedGears > 0 then
            for _, gear in ipairs(SelectedGears) do
                pcall(function()
                    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyGear"):FireServer(gear, true)
                end)
                task.wait(0.1)
            end
        end
        
        if AutoBuyAllGear then
            for _, gear in ipairs({"Frost Grenade", "Frost Blower", "Banana Gun", "Carrot Launcher", "Water Bucket"}) do
                pcall(function()
                    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyGear"):FireServer(gear, true)
                end)
                task.wait(0.1)
            end
        end
    end
end)

-- ===================== AUTO FARM LOGIC =====================
task.spawn(function()
    local function getChar()
        return player.Character or player.CharacterAdded:Wait()
    end
    
    local char = getChar()
    local hrp = char:WaitForChild("HumanoidRootPart")
    local hum = char:WaitForChild("Humanoid")
    
    player.CharacterAdded:Connect(function(newChar)
        char = newChar
        hrp = newChar:WaitForChild("HumanoidRootPart")
        hum = newChar:WaitForChild("Humanoid")
    end)
    
    local Clip = true
    local NoclipConn
    
    local function noclip()
        Clip = false
        if NoclipConn then return end
        NoclipConn = RunService.Stepped:Connect(function()
            if not Clip and char and char.Parent then
                for _, v in pairs(char:GetDescendants()) do
                    if v:IsA("BasePart") and v.CanCollide and v.Name ~= "HumanoidRootPart" then
                        v.CanCollide = false
                    end
                end
            end
        end)
    end
    
    local function clip()
        Clip = true
        if NoclipConn then
            NoclipConn:Disconnect()
            NoclipConn = nil
        end
    end
    
    local function findWeapon()
        if not char or not char.Parent then return nil end
        for _, container in ipairs({char, player.Backpack}) do
            for _, item in ipairs(container:GetChildren()) do
                if item:IsA("Tool") and (item.Name:match("Frost Grenade") or item.Name:lower():match("bat")) then
                    return item
                end
            end
        end
        return nil
    end
    
    local function equipWeapon(weapon)
        if not weapon or not hum or not hum.Parent then return false end
        pcall(function()
            if weapon.Parent == player.Backpack then
                hum:EquipTool(weapon)
            end
        end)
        task.wait(0.3)
        return weapon.Parent == char
    end
    
    local function attack(brainrot)
        if not brainrot or not brainrot.Parent or not brainrot.PrimaryPart then return false end
        local prog = brainrot:GetAttribute("Progress") or 0
        if prog >= 100 then return false end
        
        local weapon = findWeapon()
        if not weapon then return false end
        
        if not equipWeapon(weapon) then return false end
        
        pcall(function()
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("UseGear"):FireServer(weapon, brainrot.PrimaryPart.Position)
        end)
        return true
    end
    
    Notify("Auto Farm", "System ready!", "check")
    
    while true do
        task.wait(0.5)
        
        if not AutoFarmEnabled then
            clip()
            continue
        end
        
        if not char or not char.Parent or not hrp or not hrp.Parent then
            char = getChar()
            hrp = char:WaitForChild("HumanoidRootPart")
            hum = char:WaitForChild("Humanoid")
            task.wait(1)
            continue
        end
        
        local brainrotsFolder = Workspace:FindFirstChild("Brainrots")
        if not brainrotsFolder then continue end
        
        local target = nil
        
        for _, brainrot in ipairs(brainrotsFolder:GetChildren()) do
            if brainrot:IsA("Model") and brainrot.PrimaryPart then
                local rarity = brainrot:GetAttribute("Rarity")
                local prog = brainrot:GetAttribute("Progress") or 0
                
                if rarity and prog < 100 then
                    for _, selRarity in ipairs(SelectedRarities) do
                        if rarity == selRarity then
                            target = brainrot
                            break
                        end
                    end
                end
                
                if target then break end
            end
        end
        
        if target and target.PrimaryPart then
            noclip()
            local pos = target.PrimaryPart.Position
            hrp.CFrame = CFrame.new(pos + Vector3.new(0, 7, 0))
            task.wait(0.4)
            attack(target)
            task.wait(0.3)
        else
            clip()
        end
    end
end)

Notify("Lowet Hub", "Loaded successfully!", "check-circle")