
local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

WindUI:AddTheme({
    Name = "POWER",
    Accent = Color3.fromHex("#FF6B00"),
    Dialog = Color3.fromHex("#1a1a1a"),
    Outline = Color3.fromHex("#FF8C00"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#CC5500"),
    Background = Color3.fromHex("#0d0d0d"),
    Button = Color3.fromHex("#FF6B00"),
    Icon = Color3.fromHex("#FFA500")
})

WindUI:SetTheme("POWER")

local Window = WindUI:CreateWindow({
    Title = "Lowet Hub",
    Icon = "door-open",
    Author = "by RedMod",
})

-- Function thông báo đẹp
local function Notify(title, content, icon)
    WindUI:Notify({
        Title = title,
        Content = content,
        Duration = 3,
        Icon = icon or "info",
    })
end

-- ===================== SERVICES & VARIABLES =====================
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local seedsFrame = player.PlayerGui.Main.Seeds.Frame.ScrollingFrame
local gearsFrame = player.PlayerGui.Main.Gears.Frame.ScrollingFrame

local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")
local useItemRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("UseItem")

-- Biến cài đặt
local SelectedSeeds = {}
local SelectedGears = {}
local SelectedSellPlants = {}
local SelectedRarities = {"Secret", "Limited"}
local AutoBuySelectSeed = false
local AutoBuyAllSeeds = false
local AutoBuySelectGear = false
local AutoBuyAllGear = false
local AutoFarmEnabled = false

-- ===================== HELPER FUNCTIONS =====================
local function getStock(text)
    local amount = text:match("x(%d+)")
    return tonumber(amount) or 0
end

local function getItemList(scrollFrame)
    local items = {}
    for _, itemFrame in ipairs(scrollFrame:GetChildren()) do
        if itemFrame:IsA("Frame") and itemFrame:FindFirstChild("Stock") then
            table.insert(items, itemFrame.Name)
        end
    end
    return items
end

local function buyItem(itemName, amount, isSeed)
    local arg2 = isSeed and "\b" or "\026"
    for i = 1, amount do
        pcall(function()
            local args = {{itemName, arg2}}
            dataRemoteEvent:FireServer(unpack(args))
        end)
    end
end

-- ===================== CHARACTER & PLOT SETUP =====================
local function getCharacter()
    return player.Character or player.CharacterAdded:Wait()
end

local character = getCharacter()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

player.CharacterAdded:Connect(function(newChar)
    character = newChar
    hrp = newChar:WaitForChild("HumanoidRootPart")
    humanoid = newChar:WaitForChild("Humanoid")
end)

-- Tìm plot của player
local function getMyPlot()
    local plotsFolder = Workspace:WaitForChild("Plots")
    for _, plot in ipairs(plotsFolder:GetChildren()) do
        if plot:GetAttribute("Owner") == player.Name then
            return plot
        end
    end
    return nil
end

local myPlot = getMyPlot()
if not myPlot then 
    Notify("Error", "Could not find your plot!", "alert-circle")
    return 
end

-- Tìm tier cao nhất và road parts
local function getRoadParts()
    local tierModel
    local highestTier = 0
    
    if myPlot:FindFirstChild("Other") then
        for _, candidate in ipairs(myPlot.Other:GetChildren()) do
            local tierNum = tonumber(candidate.Name:match("^Tier(%d+)$"))
            if tierNum and tierNum > highestTier and candidate:IsA("Model") then
                highestTier = tierNum
                tierModel = candidate
            end
        end
    end
    
    if not tierModel then return {} end
    
    local roadModel = tierModel:FindFirstChild("Road")
    if not roadModel then return {} end
    
    local parts = {}
    for _, p in ipairs(roadModel:GetDescendants()) do
        if p:IsA("BasePart") then 
            table.insert(parts, p) 
        end
    end
    return parts
end

local roadParts = getRoadParts()

-- ===================== NOCLIP FUNCTIONS =====================
local Clip = true
local NoclipConnection

local function noclip()
    Clip = false
    if NoclipConnection then return end
    
    NoclipConnection = RunService.Stepped:Connect(function()
        if not Clip and character and character.Parent then
            for _, v in pairs(character:GetDescendants()) do
                if v:IsA("BasePart") and v.CanCollide and v.Name ~= "HumanoidRootPart" then
                    v.CanCollide = false
                end
            end
        end
    end)
end

local function clip()
    Clip = true
    if NoclipConnection then
        NoclipConnection:Disconnect()
        NoclipConnection = nil
    end
end

-- ===================== WEAPON FUNCTIONS =====================
local function findFrostGrenade()
    if not character or not character.Parent then return nil end
    
    for _, container in ipairs({character, player.Backpack}) do
        for _, item in ipairs(container:GetChildren()) do
            if item:IsA("Tool") and item.Name:match("Frost Grenade") then
                return item
            end
        end
    end
    return nil
end

local function findBatItem()
    if not character or not character.Parent then return nil end
    
    for _, container in ipairs({character, player.Backpack}) do
        for _, item in ipairs(container:GetChildren()) do
            if item:IsA("Tool") and item.Name:lower():match("bat") then
                return item
            end
        end
    end
    return nil
end

local function fireFrostGrenade(brainrot)
    if not brainrot or not brainrot.Parent then return end
    
    local progress = brainrot:GetAttribute("Progress") or 0
    if progress < 0.6 then return end
    
    local tool = findFrostGrenade() or findBatItem()
    if not tool then return end
    
    local bp = brainrot.PrimaryPart or brainrot:FindFirstChildWhichIsA("BasePart")
    if not bp then return end
    
    pcall(function()
        humanoid:EquipTool(tool)
        task.wait(0.1)
        
        local args = {{
            Toggle = true,
            Tool = tool,
            Time = 0.5,
            Pos = Vector3.new(bp.Position.X, bp.Position.Y, bp.Position.Z)
        }}
        useItemRemote:FireServer(unpack(args))
    end)
end

-- ===================== BRAINROT DETECTION =====================
local DETECT_RADIUS = 20

local function findTargetBrainrot()
    local brainrotsFolder = Workspace:FindFirstChild("ScriptedMap")
    if not brainrotsFolder then return nil end
    
    brainrotsFolder = brainrotsFolder:FindFirstChild("Brainrots")
    if not brainrotsFolder then return nil end
    
    for _, brainrot in ipairs(brainrotsFolder:GetChildren()) do
        if brainrot:IsA("Model") then
            local rarity = brainrot:GetAttribute("Rarity")
            
            if rarity and table.find(SelectedRarities, rarity) then
                local primary = brainrot.PrimaryPart or brainrot:FindFirstChildWhichIsA("BasePart")
                
                if primary then
                    for _, roadPart in ipairs(roadParts) do
                        if (primary.Position - roadPart.Position).Magnitude <= DETECT_RADIUS then
                            return brainrot
                        end
                    end
                end
            end
        end
    end
    return nil
end

-- ===================== UI SECTIONS =====================
local SectionMain = Window:Section({
    Title = "Main",
    Icon = "house",
    Opened = true,
})

local SectionGame = Window:Section({
    Title = "Game",
    Icon = "gamepad-2",
    Opened = true,
})

-- ===================== TAB HOME =====================
local TabHome = SectionMain:Tab({
    Title = "Home",
    Icon = "house"
})

TabHome:Paragraph({
    Title = "Welcome to Lowet Hub",
    Desc = "Join our Discord: https://discord.gg/VyQfTtDJnY",
    Locked = false,
    Buttons = {
        {
            Icon = "copy",
            Title = "Copy Link",
            Callback = function()
                setclipboard("https://discord.gg/VyQfTtDJnY")
                Notify("Success", "Discord link copied!", "check")
            end
        }
    }
})

-- ===================== TAB AUTO FARM =====================
local TabAutoFarm = SectionGame:Tab({
    Title = "Auto Farm",
    Icon = "zap"
})

TabAutoFarm:Paragraph({
    Title = "Auto Farm Brainrots",
    Desc = "Tự động farm brainrots với vũ khí",
    Locked = false
})

TabAutoFarm:Dropdown({
    Title = "Select Rarities",
    Values = {"Rare", "Epic", "Legendary", "Mythic", "Godly", "Secret", "Limited"},
    Value = {"Secret", "Limited"},
    Multi = true,
    AllowNone = true,
    Callback = function(selected)
        SelectedRarities = selected
        if #selected > 0 then
            Notify("Rarities", table.concat(selected, ", "), "target")
        end
    end
})

TabAutoFarm:Toggle({
    Title = "Enable Auto Farm",
    Description = "Bật/tắt auto farm brainrots",
    Default = false,
    Callback = function(value)
        AutoFarmEnabled = value
        Notify("Auto Farm", value and "Enabled ✓" or "Disabled ✗", value and "zap" or "x")
    end
})

-- ===================== TAB SEEDS =====================
local TabSeeds = SectionGame:Tab({
    Title = "Seeds",
    Icon = "sprout"
})

local allSeedsList = getItemList(seedsFrame)

TabSeeds:Dropdown({
    Title = "Select Seeds",
    Values = allSeedsList,
    Value = {},
    Multi = true,
    Callback = function(selected)
        SelectedSeeds = selected
        if #selected > 0 then
            Notify("Seeds", #selected .. " seeds selected", "sprout")
        end
    end
})

TabSeeds:Toggle({
    Title = "Auto Buy Selected",
    Default = false,
    Callback = function(value)
        AutoBuySelectSeed = value
        Notify("Seeds", value and "Auto buy ON" or "Auto buy OFF", "shopping-cart")
    end
})

TabSeeds:Toggle({
    Title = "Auto Buy All Seeds",
    Default = false,
    Callback = function(value)
        AutoBuyAllSeeds = value
        Notify("Seeds", value and "Buy all ON" or "Buy all OFF", "shopping-bag")
    end
})

-- ===================== TAB GEAR =====================
local TabGear = SectionGame:Tab({
    Title = "Gear",
    Icon = "wrench"
})

local allGearsList = getItemList(gearsFrame)

TabGear:Dropdown({
    Title = "Select Gears",
    Values = allGearsList,
    Value = {},
    Multi = true,
    Callback = function(selected)
        SelectedGears = selected
        if #selected > 0 then
            Notify("Gears", #selected .. " gears selected", "wrench")
        end
    end
})

TabGear:Toggle({
    Title = "Auto Buy Selected",
    Default = false,
    Callback = function(value)
        AutoBuySelectGear = value
        Notify("Gears", value and "Auto buy ON" or "Auto buy OFF", "tool")
    end
})

TabGear:Toggle({
    Title = "Auto Buy All Gears",
    Default = false,
    Callback = function(value)
        AutoBuyAllGear = value
        Notify("Gears", value and "Buy all ON" or "Buy all OFF", "package")
    end
})

-- ===================== TAB SELL =====================
local TabSell = SectionGame:Tab({
    Title = "Sell",
    Icon = "dollar-sign"
})

local rarities = {"Common", "Epic", "Legendary", "Godly", "Mythic", "Secret", "Limited"}
local sellButtons = {}

for _, rarity in ipairs(rarities) do
    table.insert(sellButtons, {
        Icon = "trash-2",
        Title = "Sell " .. rarity,
        Callback = function()
            pcall(function()
                ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(rarity)
                Notify("Sold", "All " .. rarity .. " items sold!", "dollar-sign")
            end)
        end
    })
end

TabSell:Paragraph({
    Title = "Quick Sell",
    Desc = "Bán items theo rarity",
    Buttons = sellButtons
})

TabSell:Paragraph({
    Title = "Sell All Trash",
    Desc = "Bán tất cả items rác cùng lúc",
    Buttons = {
        {
            Icon = "trash",
            Title = "Sell All",
            Callback = function()
                local count = 0
                for _, rarity in ipairs(rarities) do
                    pcall(function()
                        ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(rarity)
                        count = count + 1
                    end)
                    task.wait(0.1)
                end
                Notify("Bulk Sell", "Sold " .. count .. " types!", "trash-2")
            end
        }
    }
})

TabSell:Dropdown({
    Title = "Select Plants to Sell",
    Values = allSeedsList,
    Value = {},
    Multi = true,
    Callback = function(selected)
        SelectedSellPlants = selected
    end
})

TabSell:Paragraph({
    Title = "Sell Plants",
    Buttons = {
        {
            Icon = "hand",
            Title = "Sell Selected",
            Callback = function()
                if #SelectedSellPlants == 0 then
                    Notify("Warning", "No plants selected!", "alert-triangle")
                    return
                end
                
                local sold = 0
                for _, plant in ipairs(SelectedSellPlants) do
                    pcall(function()
                        local char = player.Character
                        local hum = char and char:FindFirstChildOfClass("Humanoid")
                        if hum then
                            local item = player.Backpack:FindFirstChild(plant) or char:FindFirstChild(plant)
                            if item then
                                hum:EquipTool(item)
                                task.wait(0.2)
                                ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ItemSell"):FireServer()
                                sold = sold + 1
                                task.wait(0.2)
                            end
                        end
                    end)
                end
                Notify("Plants Sold", sold .. "/" .. #SelectedSellPlants .. " sold", "check-circle")
            end
        }
    }
})

-- ===================== TAB BRAINROT =====================
local TabBrainrot = SectionGame:Tab({
    Title = "Brainrot",
    Icon = "skull"
})

TabBrainrot:Paragraph({
    Title = "Equip Best",
    Desc = "Trang bị brainrots tốt nhất",
    Buttons = {
        {
            Icon = "zap",
            Title = "Equip Best",
            Callback = function()
                pcall(function()
                    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("EquipBestBrainrots"):FireServer()
                    Notify("Success", "Best brainrots equipped!", "crown")
                end)
            end
        }
    }
})

-- ===================== AUTO BUY LOGIC =====================
task.spawn(function()
    while task.wait(1) do
        -- Auto Buy Selected Seeds
        if AutoBuySelectSeed and #SelectedSeeds > 0 then
            for _, seedName in ipairs(SelectedSeeds) do
                local seedFrame = seedsFrame:FindFirstChild(seedName)
                if seedFrame and seedFrame:FindFirstChild("Stock") then
                    local stock = getStock(seedFrame.Stock.Text)
                    if stock > 0 then
                        buyItem(seedName, stock, true)
                    end
                end
            end
        end
        
        -- Auto Buy All Seeds
        if AutoBuyAllSeeds then
            for _, seedFrame in ipairs(seedsFrame:GetChildren()) do
                if seedFrame:IsA("Frame") and seedFrame:FindFirstChild("Stock") then
                    local stock = getStock(seedFrame.Stock.Text)
                    if stock > 0 then
                        buyItem(seedFrame.Name, stock, true)
                    end
                end
            end
        end
        
        -- Auto Buy Selected Gears
        if AutoBuySelectGear and #SelectedGears > 0 then
            for _, gearName in ipairs(SelectedGears) do
                local gearFrame = gearsFrame:FindFirstChild(gearName)
                if gearFrame and gearFrame:FindFirstChild("Stock") then
                    local stock = getStock(gearFrame.Stock.Text)
                    if stock > 0 then
                        buyItem(gearName, stock, false)
                    end
                end
            end
        end
        
        -- Auto Buy All Gears
        if AutoBuyAllGear then
            for _, gearFrame in ipairs(gearsFrame:GetChildren()) do
                if gearFrame:IsA("Frame") and gearFrame:FindFirstChild("Stock") then
                    local stock = getStock(gearFrame.Stock.Text)
                    if stock > 0 then
                        buyItem(gearFrame.Name, stock, false)
                    end
                end
            end
        end
    end
end)

-- ===================== AUTO FARM LOGIC =====================
task.spawn(function()
    local FIRE_INTERVAL = 2
    
    Notify("Auto Farm", "System ready!", "check")
    
    while true do
        if AutoFarmEnabled then
            local targetBrainrot = findTargetBrainrot()
            
            if targetBrainrot then
                local targetPart = targetBrainrot.PrimaryPart or targetBrainrot:FindFirstChildWhichIsA("BasePart")
                
                if targetPart then
                    noclip()
                    
                    -- Teleport đến brainrot
                    hrp.CFrame = CFrame.new(targetPart.Position)
                    
                    -- Tạo BodyPosition để giữ character cố định
                    local bodyPos = Instance.new("BodyPosition")
                    bodyPos.MaxForce = Vector3.new(1e5, 1e5, 1e5)
                    bodyPos.P = 5000
                    bodyPos.D = 100
                    bodyPos.Position = hrp.Position
                    bodyPos.Parent = hrp
                    
                    local lastFire = 0
                    
                    -- Vòng lặp tấn công brainrot
                    while targetBrainrot.Parent and AutoFarmEnabled do
                        bodyPos.Position = targetPart.Position
                        
                        local progress = targetBrainrot:GetAttribute("Progress") or 0
                        
                        -- Equip vũ khí khi progress > 60%
                        if progress > 0.6 then
                            local tool = findFrostGrenade() or findBatItem()
                            if tool then
                                pcall(function()
                                    humanoid:EquipTool(tool)
                                end)
                            end
                        end
                        
                        -- Bắn với interval
                        local now = tick()
                        if now - lastFire >= FIRE_INTERVAL then
                            fireFrostGrenade(targetBrainrot)
                            lastFire = now
                        end
                        
                        task.wait(0.03)
                    end
                    
                    -- Dọn dẹp
                    humanoid:UnequipTools()
                    bodyPos:Destroy()
                    clip()
                end
            else
                task.wait(1)
            end
        else
            clip()
            task.wait(1)
        end
    end
end)

Notify("Lowet Hub", "Loaded successfully! 🔥", "check-circle")
```

