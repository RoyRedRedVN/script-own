local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

WindUI:AddTheme({
    Name = "POWER",
    
    Accent = Color3.fromHex("#18181b"),
    Dialog = Color3.fromHex("#161616"),
    Outline = Color3.fromHex("#FFFFFF"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#101010"),
    Button = Color3.fromHex("#52525b"),
    Icon = Color3.fromHex("#a1a1aa")
})

WindUI:SetTheme("POWER")

local Window = WindUI:CreateWindow({
    Title = "Lowet Hub",
    Icon = "door-open",
    Author = "by RedMod",
})

-- Variables
local SelectedSeeds = {}
local SelectedGears = {}
local SelectedSellPlants = {}
local AutoBuySelectSeed = false
local AutoBuyAllSeeds = false
local AutoBuySelectGear = false
local AutoBuyAllGear = false

-- TAB HOME
local TabHome = Window:Tab({
    Title = "Home",
    Icon = "house"
})

TabHome:Paragraph({
    Title = "Welcome to Lowet Hub",
    Desc = "Join our Discord community for updates and support!",
    Locked = false
})

TabHome:Paragraph({
    Title = "Discord Server",
    Desc = "https://discord.gg/VyQfTtDJnY",
    Locked = false,
    Buttons = {
        {
            Icon = "copy",
            Title = "Copy Link",
            Callback = function()
                setclipboard("https://discord.gg/VyQfTtDJnY")
                print("✓ Discord link copied to clipboard!")
            end
        }
    }
})

-- TAB SEEDS
local TabSeeds = Window:Tab({
    Title = "Seeds",
    Icon = "sprout"
})

TabSeeds:Paragraph({
    Title = "Seeds Manager",
    Desc = "Buy and manage your seeds",
    Locked = false
})

local SeedsDropdown = TabSeeds:Dropdown({
    Title = "Select Seeds",
    Values = {
        "Cactus",
        "Strawberry",
        "Pumpkin",
        "Dragon Fruit",
        "Eggplant",
        "Watermelon",
        "Cocotank",
        "Grape",
        "Carnivorous Plant",
        "Mr carrot",
        "Shroombino",
        "Tomatrio",
        "Mango"
    },
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(selected)
        SelectedSeeds = selected
        if type(selected) == "table" then
            print("Selected Seeds: " .. game:GetService("HttpService"):JSONEncode(selected))
        end
    end
})

TabSeeds:Toggle({
    Title = "Auto Buy Selected",
    Description = "Auto buy selected seeds",
    Default = false,
    Callback = function(value)
        AutoBuySelectSeed = value
        print("Auto Buy Selected Seeds:", value)
    end
})

TabSeeds:Toggle({
    Title = "Auto Buy All",
    Description = "Auto buy all seeds",
    Default = false,
    Callback = function(value)
        AutoBuyAllSeeds = value
        print("Auto Buy All Seeds:", value)
    end
})

-- TAB GEAR
local TabGear = Window:Tab({
    Title = "Gear",
    Icon = "wrench"
})

TabGear:Paragraph({
    Title = "Gear Shop",
    Desc = "Buy and equip your gears",
    Locked = false
})

local GearsDropdown = TabGear:Dropdown({
    Title = "Select Gears",
    Values = {
        "Frost Grenade",
        "Frost Blower",
        "Banana Gun",
        "Carrot Launcher",
        "Water Bucket"
    },
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(selected)
        SelectedGears = selected
        if type(selected) == "table" then
            print("Selected Gears: " .. game:GetService("HttpService"):JSONEncode(selected))
        end
    end
})

TabGear:Toggle({
    Title = "Auto Buy Selected",
    Description = "Auto buy selected gears",
    Default = false,
    Callback = function(value)
        AutoBuySelectGear = value
        print("Auto Buy Selected Gears:", value)
    end
})

TabGear:Toggle({
    Title = "Auto Buy All",
    Description = "Auto buy all gears",
    Default = false,
    Callback = function(value)
        AutoBuyAllGear = value
        print("Auto Buy All Gears:", value)
    end
})

-- TAB SELL
local TabSell = Window:Tab({
    Title = "Sell",
    Icon = "dollar-sign"
})

TabSell:Paragraph({
    Title = "Auto Sell Manager",
    Desc = "Sell items by rarity",
    Locked = false
})

TabSell:Paragraph({
    Title = "Sell Trash Items",
    Desc = "Quick sell items by rarity",
    Locked = false,
    Buttons = {
        {
            Icon = "trash-2",
            Title = "Sell Common",
            Callback = function()
                local success = pcall(function()
                    local args = {"Common"}
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(unpack(args))
                end)
                if success then
                    print("✓ Sold all Common items!")
                else
                    warn("✗ Failed to sell Common items")
                end
            end
        },
        {
            Icon = "trash-2",
            Title = "Sell Epic",
            Callback = function()
                local success = pcall(function()
                    local args = {"Epic"}
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(unpack(args))
                end)
                if success then
                    print("✓ Sold all Epic items!")
                else
                    warn("✗ Failed to sell Epic items")
                end
            end
        },
        {
            Icon = "trash-2",
            Title = "Sell Legendary",
            Callback = function()
                local success = pcall(function()
                    local args = {"Legendary"}
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(unpack(args))
                end)
                if success then
                    print("✓ Sold all Legendary items!")
                else
                    warn("✗ Failed to sell Legendary items")
                end
            end
        },
        {
            Icon = "trash-2",
            Title = "Sell Godly",
            Callback = function()
                local success = pcall(function()
                    local args = {"Godly"}
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(unpack(args))
                end)
                if success then
                    print("✓ Sold all Godly items!")
                else
                    warn("✗ Failed to sell Godly items")
                end
            end
        },
        {
            Icon = "trash-2",
            Title = "Sell Mythic",
            Callback = function()
                local success = pcall(function()
                    local args = {"Mythic"}
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(unpack(args))
                end)
                if success then
                    print("✓ Sold all Mythic items!")
                else
                    warn("✗ Failed to sell Mythic items")
                end
            end
        },
        {
            Icon = "trash-2",
            Title = "Sell Secret",
            Callback = function()
                local success = pcall(function()
                    local args = {"Secret"}
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(unpack(args))
                end)
                if success then
                    print("✓ Sold all Secret items!")
                else
                    warn("✗ Failed to sell Secret items")
                end
            end
        },
        {
            Icon = "trash-2",
            Title = "Sell Limited",
            Callback = function()
                local success = pcall(function()
                    local args = {"Limited"}
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(unpack(args))
                end)
                if success then
                    print("✓ Sold all Limited items!")
                else
                    warn("✗ Failed to sell Limited items")
                end
            end
        }
    }
})

TabSell:Paragraph({
    Title = "Sell All Trash",
    Desc = "Sell multiple rarities at once",
    Locked = false,
    Buttons = {
        {
            Icon = "trash",
            Title = "Sell All Trash",
            Callback = function()
                local rarities = {"Common", "Epic", "Legendary", "Godly", "Mythic", "Secret", "Limited"}
                local soldCount = 0
                
                for _, rarity in ipairs(rarities) do
                    local success = pcall(function()
                        local args = {rarity}
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AutoSell"):FireServer(unpack(args))
                    end)
                    if success then
                        soldCount = soldCount + 1
                    end
                    task.wait(0.1)
                end
                
                print("✓ Sold " .. soldCount .. " rarity types!")
            end
        }
    }
})

TabSell:Paragraph({
    Title = "Sell Plants",
    Desc = "Auto equip and sell selected plants",
    Locked = false
})

local SellPlantsDropdown = TabSell:Dropdown({
    Title = "Select Plants to Sell",
    Values = {
        "Cactus",
        "Strawberry",
        "Pumpkin",
        "Dragon Fruit",
        "Eggplant",
        "Watermelon",
        "Cocotank",
        "Grape",
        "Carnivorous Plant",
        "Mr carrot",
        "Shroombino",
        "Tomatrio",
        "Mango"
    },
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(selected)
        SelectedSellPlants = selected
        if type(selected) == "table" then
            print("Selected Plants to Sell: " .. game:GetService("HttpService"):JSONEncode(selected))
        end
    end
})

TabSell:Paragraph({
    Title = "Sell Selected Plants",
    Desc = "Auto equip then sell the selected plants",
    Locked = false,
    Buttons = {
        {
            Icon = "hand",
            Title = "Sell Plants",
            Callback = function()
                if type(SelectedSellPlants) == "table" and #SelectedSellPlants > 0 then
                    local soldCount = 0
                    
                    for _, plant in ipairs(SelectedSellPlants) do
                        local success = pcall(function()
                            -- Equip plant first
                            local player = game:GetService("Players").LocalPlayer
                            local character = player.Character
                            if character then
                                local humanoid = character:FindFirstChildOfClass("Humanoid")
                                if humanoid then
                                    -- Find plant in backpack or character
                                    local plantItem = player.Backpack:FindFirstChild(plant) or character:FindFirstChild(plant)
                                    if plantItem then
                                        humanoid:EquipTool(plantItem)
                                        task.wait(0.2) -- Wait for equip
                                        
                                        -- Sell the equipped plant
                                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ItemSell"):FireServer()
                                        soldCount = soldCount + 1
                                        task.wait(0.2) -- Delay between sells
                                    else
                                        warn("✗ Plant not found: " .. plant)
                                    end
                                end
                            end
                        end)
                        
                        if not success then
                            warn("✗ Failed to sell: " .. plant)
                        end
                    end
                    
                    print("✓ Sold " .. soldCount .. "/" .. #SelectedSellPlants .. " plants!")
                else
                    warn("✗ No plants selected!")
                end
            end
        }
    }
})

-- TAB BRAINROT
local TabBrainrot = Window:Tab({
    Title = "Brainrot",
    Icon = "skull"
})

TabBrainrot:Paragraph({
    Title = "Brainrot Manager",
    Desc = "Equip the best brainrots in your inventory",
    Locked = false,
    Buttons = {
        {
            Icon = "zap",
            Title = "Equip Best",
            Callback = function() 
                local success, err = pcall(function()
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipBestBrainrots"):FireServer()
                end)
                if success then
                    print("✓ Equipped best brainrots!")
                else
                    warn("✗ Failed to equip brainrots:", err)
                end
            end
        }
    }
})

-- Auto Buy Logic
task.spawn(function()
    while task.wait(0.5) do
        -- Auto Buy Selected Seeds
        if AutoBuySelectSeed and type(SelectedSeeds) == "table" and #SelectedSeeds > 0 then
            for _, seed in ipairs(SelectedSeeds) do
                pcall(function()
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("BuyItem"):FireServer(seed .. " Seed", true)
                end)
                task.wait(0.1)
            end
        end
        
        -- Auto Buy All Seeds
        if AutoBuyAllSeeds then
            local allSeeds = {
                "Cactus", "Strawberry", "Pumpkin", "Dragon Fruit", "Eggplant",
                "Watermelon", "Cocotank", "Grape", "Carnivorous Plant",
                "Mr carrot", "Shroombino", "Tomatrio", "Mango"
            }
            for _, seed in ipairs(allSeeds) do
                pcall(function()
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("BuyItem"):FireServer(seed .. " Seed", true)
                end)
                task.wait(0.1)
            end
        end
        
        -- Auto Buy Selected Gears
        if AutoBuySelectGear and type(SelectedGears) == "table" and #SelectedGears > 0 then
            for _, gear in ipairs(SelectedGears) do
                pcall(function()
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("BuyGear"):FireServer(gear, true)
                end)
                task.wait(0.1)
            end
        end
        
        -- Auto Buy All Gears
        if AutoBuyAllGear then
            local allGears = {
                "Frost Grenade", "Frost Blower", "Banana Gun",
                "Carrot Launcher", "Water Bucket"
            }
            for _, gear in ipairs(allGears) do
                pcall(function()
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("BuyGear"):FireServer(gear, true)
                end)
                task.wait(0.1)
            end
        end
    end
end)